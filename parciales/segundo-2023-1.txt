1)

void my_grep(char* palabra, char* path){

  Ext2FSInode* inode = inode_for_path(path);
  unsigned int cantBlocks = inode->size / block_size; //

  unsigned char* buffer = (unsigned char*) malloc(block_size*2);
  unsigned int offset = 0;
  for(int i = 0; i < cantBlocks;i++){
    unsigned int lba = get_block_address(inode,i);
    unsigned int lba2 = get_block_address(inode,);

    read_block(lba,buffer);
    read_block(lba2,buffer+block_size);

    while(offset < block_size){
      ExtFS2DirEntry* dir = (ExtFS2DirEntry*) (buffer+offset);
      if(dir->file_type == ox1 ){
          buscar_en_archivo(palabra,load_inode(dir->inode));
        }
      if(dir->file_type == 0x2){
        my_grep(palabra,concant(path,dir->name)); // concateno y sigo buscando en los subdirectorios
      }
      offset += dir->record_length;
    }
    offset -= block_size;
  }
}

void buscar_en_archivo(char* palabra,Ext2FSInode* inode){
  unsigned int cantBlocks = inode->size / block_size;

  unsigned char* buff = (unsigned char*) malloc(block_size*2);
  unsigned int offset = 0;
  for(i = 0; i < cantBLocks ; i++){
    nsigned int lba = get_block_address(inode,i);
    unsigned int lba2 = get_block_address(inode,i+1);

    read_block(lba,buffer);
    read_block(lba2,buffer+block_size);

    while(offset < block_size){
      unsigned char* line = get_line((unsigned char*) (buff + offset)); // leo la linea
      if(find(line,palabra)){
          printf("%s\n",line);
        }
      offset += strlen(line);
    }
    offset -= block_size;
  }
}

2)a)
